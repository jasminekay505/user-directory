{"version":3,"sources":["utils/API.js","components/Search/index.js","components/Table/index.js","components/Users/index.js","components/Jumbotron/index.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Search","props","className","onSubmit","handleFormSubmit","value","onChange","handleInputChange","type","id","placeholder","Table","class","scope","onClick","sortUserFirst","sortUserLast","state","filteredUsers","map","user","name","first","last","email","login","uuid","Users","search","users","event","target","setState","filterUser","toLowerCase","trim","preventDefault","input","filter","includes","sort","user1","user2","API","then","res","data","results","catch","err","console","log","this","Component","Jumbotron","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fbc6d0e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//Get 30 random users from the random user API\r\nexport default {\r\n    getUsers: function () {\r\n        return axios.get(`https://randomuser.me/api/?results=30`)\r\n    }\r\n};","import React from \"react\";\n\nfunction Search(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"mb-3\">\n        <form className=\"form-inline\" onSubmit={props.handleFormSubmit}>\n          <input\n            value={props.value}\n            onChange={props.handleInputChange}\n            type=\"search\"\n            className=\"form-control mt-2\"\n            id=\"searchInput\"\n            placeholder=\"Search for an Employee\">\n          </input>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;","import React from \"react\";\n\nfunction Table(props) {\n    return (\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\" onClick={props.sortUserFirst}>First Name</th>\n                    <th scope=\"col\" onClick={props.sortUserLast}>Last Name</th>\n                    <th scope=\"col\">Email</th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.state.filteredUsers.map((user) => {\n                    return (\n                        <tr key={user.login.uuid}>\n                            <td>{user.name.first}</td>\n                            <td>{user.name.last}</td>\n                            <td>{user.email}</td>\n                        </tr>\n                    )\n                }\n                )}\n            </tbody>\n        </table>\n    );\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Search from \"../Search\";\nimport Table from \"../Table\";\n\nclass Users extends Component {\n    state = {\n        search: \"\",\n        users: [],\n        filteredUsers: [],\n    };\n\n    componentDidMount() {\n        API.getUsers()\n            .then((res) => this.setState({\n                users: res.data.results,\n                filteredUsers: res.data.results\n            }))\n            .catch(err => console.log(err));\n    }\n\n    handleInputChange = (event) => {\n        const value = event.target.value;\n        this.setState({ search: value });\n        this.filterUser(value.toLowerCase().trim());\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n    }\n\n    filterUser = (input) => {\n        if (input) {\n            this.setState({\n                filteredUsers: this.state.users.filter((user) => {\n                    return (\n                        user.name.first.toLowerCase().includes(input) ||\n                        user.name.last.toLowerCase().includes(input)\n                    );\n                }),\n            });\n        } else {\n            this.setState({ filteredUsers: this.state.users });\n        }\n    };\n\n    sortUserFirst = (event) => {\n        this.setState({\n            filteredUsers: this.state.filteredUsers.sort(\n                (user1, user2) => {\n                    if (user1.name.first < user2.name.first) {\n                        return -1\n                    } else if (user1.name.first > user2.name.first) {\n                        return 1\n                    } else { return 0 }\n                }\n            )\n        })\n    }\n\n    sortUserLast = (event) => {\n        this.setState({\n            filteredUsers: this.state.filteredUsers.sort(\n                (user1, user2) => {\n                    if (user1.name.last < user2.name.last) {\n                        return -1\n                    } else if (user1.name.last > user2.name.last) {\n                        return 1\n                    } else { return 0 }\n                }\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Search\n                    value={this.state.search}\n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                />\n                <Table\n                    state={this.state}\n                    filterUser={this.filterUser}\n                    sortUserFirst={this.sortUserFirst}\n                    sortUserLast={this.sortUserLast}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Users;","import React from \"react\";\n\nfunction Jumbotron() {\n    return (\n        <div class=\"jumbotron jumbotron-fluid\">\n            <div class=\"container\">\n                <h1 class=\"display-4\">Employee Directory</h1>\n                <p class=\"lead\">Sort employees alphabetically by clicking the first or last name column or search for an employee by name using the search bar.</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Jumbotron;","import React from 'react';\nimport './App.css';\nimport Users from \"./components/Users\";\nimport Jumbotron from \"./components/Jumbotron\";\n\nfunction App() {\n  return (\n    <div>\n      <Jumbotron/>\n      <Users/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}